package com.magikhelper.dao.pojo;

// Generated Jan 7, 2015 9:17:15 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "magikhelper")
@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
public class User implements java.io.Serializable {

	private Integer id;
	private Address address;
	private String email;
	private String password;
	private String firstName;
	private String lastName;
	private String phone;
	private Byte vendor;
	private Byte client;
	private Integer rates;
	private Byte recordStatus;
	private Date updateTime;
	private Date createTime;
	@XmlTransient
	private Set<VendorSkill> vendorSkills = new HashSet<VendorSkill>(0);
	@XmlTransient
	private Set<Booking> bookingsForClientId = new HashSet<Booking>(0);
	@XmlTransient
	private Set<Booking> bookingsForVendorId = new HashSet<Booking>(0);

	public User() {
	}

	public User(String email, String phone) {
		this.email = email;
		this.phone = phone;
	}

	public User(Address address, String email, String password,
			String firstName, String lastName, String phone, Byte vendor,
			Byte client, Integer rates, Byte recordStatus, Date updateTime,
			Date createTime, Set<VendorSkill> vendorSkills,
			Set<Booking> bookingsForClientId, Set<Booking> bookingsForVendorId) {
		this.address = address;
		this.email = email;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.phone = phone;
		this.vendor = vendor;
		this.client = client;
		this.rates = rates;
		this.recordStatus = recordStatus;
		this.updateTime = updateTime;
		this.createTime = createTime;
		this.vendorSkills = vendorSkills;
		this.bookingsForClientId = bookingsForClientId;
		this.bookingsForVendorId = bookingsForVendorId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "phone", nullable = false, length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "vendor")
	public Byte getVendor() {
		return this.vendor;
	}

	public void setVendor(Byte vendor) {
		this.vendor = vendor;
	}

	@Column(name = "client")
	public Byte getClient() {
		return this.client;
	}

	public void setClient(Byte client) {
		this.client = client;
	}

	@Column(name = "rates")
	public Integer getRates() {
		return this.rates;
	}

	public void setRates(Integer rates) {
		this.rates = rates;
	}

	@Column(name = "record_status")
	public Byte getRecordStatus() {
		return this.recordStatus;
	}

	public void setRecordStatus(Byte recordStatus) {
		this.recordStatus = recordStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<VendorSkill> getVendorSkills() {
		return this.vendorSkills;
	}

	public void setVendorSkills(Set<VendorSkill> vendorSkills) {
		this.vendorSkills = vendorSkills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	public Set<Booking> getBookingsForClientId() {
		return this.bookingsForClientId;
	}

	public void setBookingsForClientId(Set<Booking> bookingsForClientId) {
		this.bookingsForClientId = bookingsForClientId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendor")
	public Set<Booking> getBookingsForVendorId() {
		return this.bookingsForVendorId;
	}

	public void setBookingsForVendorId(Set<Booking> bookingsForVendorId) {
		this.bookingsForVendorId = bookingsForVendorId;
	}

}
