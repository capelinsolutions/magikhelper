package com.magikhelper.dao.pojo;

// Generated Jan 7, 2015 9:17:15 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Booking generated by hbm2java
 */
@Entity
@Table(name = "booking", catalog = "magikhelper")
@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
public class Booking implements java.io.Serializable {

	private Integer id;
	private User client;
	private User vendor;
	private Date bookedDatetime;
	private int duration;
	private Integer rate;
	private Date startDatetime;
	private Date finishDatetime;
	private Date updateTime;
	private Date createTime;
	private Set<BookingService> bookingServices = new HashSet<BookingService>(0);

	public Booking() {
	}

	public Booking(User client, User vendor,
			Date bookedDatetime, int duration, Date updateTime, Date createTime) {
		this.client = client;
		this.vendor = vendor;
		this.bookedDatetime = bookedDatetime;
		this.duration = duration;
		this.updateTime = updateTime;
		this.createTime = createTime;
	}

	public Booking(User client, User vendor,
			Date bookedDatetime, int duration, Integer rate,
			Date startDatetime, Date finishDatetime, Date updateTime,
			Date createTime, Set<BookingService> bookingServices) {
		this.client = client;
		this.vendor = vendor;
		this.bookedDatetime = bookedDatetime;
		this.duration = duration;
		this.rate = rate;
		this.startDatetime = startDatetime;
		this.finishDatetime = finishDatetime;
		this.updateTime = updateTime;
		this.createTime = createTime;
		this.bookingServices = bookingServices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "client_id", nullable = false)
	public User getClient() {
		return this.client;
	}

	public void setClient(User client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "vendor_id", nullable = false)
	public User getVendor() {
		return this.vendor;
	}

	public void setVendor(User vendor) {
		this.vendor = vendor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "booked_datetime", nullable = false, length = 19)
	public Date getBookedDatetime() {
		return this.bookedDatetime;
	}

	public void setBookedDatetime(Date bookedDatetime) {
		this.bookedDatetime = bookedDatetime;
	}

	@Column(name = "duration", nullable = false)
	public int getDuration() {
		return this.duration;
	}

	public void setDuration(int duration) {
		this.duration = duration;
	}

	@Column(name = "rate")
	public Integer getRate() {
		return this.rate;
	}

	public void setRate(Integer rate) {
		this.rate = rate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_datetime", length = 19)
	public Date getStartDatetime() {
		return this.startDatetime;
	}

	public void setStartDatetime(Date startDatetime) {
		this.startDatetime = startDatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "finish_datetime", length = 19)
	public Date getFinishDatetime() {
		return this.finishDatetime;
	}

	public void setFinishDatetime(Date finishDatetime) {
		this.finishDatetime = finishDatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", nullable = false, length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "booking")
	public Set<BookingService> getBookingServices() {
		return this.bookingServices;
	}

	public void setBookingServices(Set<BookingService> bookingServices) {
		this.bookingServices = bookingServices;
	}

}
